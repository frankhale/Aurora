Aurora - An MVC web framework for .NET 

NOTE: See source code comments for usage.

Frank Hale <frankhale@gmail.com>

Date: 5 April 2012

--------------------
--- Feature List ---
--------------------  

- MVC based 
- Simple tag based view engine with master pages and partial views as well as
  fragments 
- URL parameters bind to action method parameters automatically 
- Posted forms binds to post models or action parameters automatically 
- Actions can have bound parameters that are bound to actions at runtime
- Actions can be segregated based on HttpGet, HttpPost, HttpPut and 
  HttpDelete attributes and you can secure them with the Secure named 
  parameter. Actions without a designation will not be invoked from a URL.  
- Actions can have filters with optional filter results that bind to action
  parameters.
- Actions can have aliases. Aliases can also be added dynamically at runtime
  along with default parameters.
- Actions can be invoked on a special basis, they are designated with the
  [FromRedirectOnly] attribute.
- Built in OpenID authentication which is as easy as calling two methods. One 
  to initiate the login with the provider and then one to finalize 
  authentication.
- Built in Active Directory querying so you can authenticate your user 
  against an Active Directory user. Typically for use in client certificate
  authentication.
- Bundling/Minifying of Javascript and CSS.
 
Changelog:

5 April 2012

- Added a new web.config section for annotating more than one Active Directory
  domain and search path.
- The HTMLTable now highlights every other row. The color can be configured but 
  it's turned on by default. This will be fixed when I have a chance to update 
	the constructor(s).
- Documentation updates

2 April 2012

- The SecurityManager now has the ability to call a callback at the time roles
  are checked for an action that is secure so that you can do custom validation.
- Added a new class called StaticFileManager. This is used to protect static 
	files. Users with the assigned roles will be able to download the files.
- The HTMLSelect helper class got a new parameter in it's constructor so you can
  denote if it's enabled by default or not.

30 March 2012

- Fixed bug in the ApplicationInternals class in the RouteInfo list creation 
	method where the list would continue to grow over time with duplicate entries.
- Made some other little tweaks.

19 March 2012

- The ActionBinder got some love tonight.

17 March 2012

- Tweaks to the view engine.

15 March 2012

- Refactored the view engine so that it can support partitions. Partitions are
  similiar to ASP.NET MVC areas. A controller can now use the [Partition] 
  attribute to designate that it is in a specific partition. Controllers that 
  designate a partition would use the following folder structure:

  /views (global shared views and fragments)
    /shared
    /fragments
  /partition
    /controllers (convention)
    /models      (convention)
      /views
      /folder_for_each_controller
        /shared
        /fragments
        /actions (a view for each action that returns a ViewResult)

14 March 2012

- The documentation got some love today!
- The [HttpGet] attribute now has a Refresh parameter which is used to add 
  a refresh HTTP header to the response.
- Code cleanup (specifically: the view engine).

13 March 2012

- More overloads for the Active Directory methods.

12 March 2012

- The Active Directory methods got some new overloads so you don't have to 
  specify the AD search user and password in the web.config file.
- The FragTags dictionary is now a dictionary of dictionaries and the necessary
  infrastructure has been changed to support it.
- Worked more on the FindRoute method in the route manager. 
- Tweaks made to the ViewResult classes.
- A little code cleanup.

11 March 2012

- Added an overload to the ActionBinder so that you can add a single instance
  of a bound parameter to all actions in a controller.
- Some minor updates to the documentation in the code comments at the top of 
  the source file.
- Minor code clean up
- Added FragTags dictionary to the base Controller to make it more consistent
  when passing a Dictionary<string,string> to the RenderFragment method.

10 March 2012

- FindRoute() in the route manager class got some much needed refactoring love.
- Added action filters and logic to handle them in the route manager.
- Added some documentation and code samples on action filters.

8 March 2012

- The pre and post action handler has access to a little more information about
  the route that will/was be handled. The most important piece of this 
	information is having access to the route bindings.

7 March 2012

- Had to back out a change I made early this morning
- Code cleanup

4 March 2012

- Changed the [SanitizeHTML] attribute to [Sanitize] and it's gained the ability
  to strip HTML or perform an HTML encode.

3 March 2012

- Code cleanup
- Added ValidateRequest to the Aurora web.config tag. Request validation is 
  turned on by default. What this means is that all HTML or potentially harmful 
  characters posted in strings will throw an exception. You can turn it off and 
  then use [SanitizeHTML] attribute on action parameter strings and string 
  properties in the post models. At the moment this will simply use the HTML 
  Agility Pack to strip HTML. In the future the [SanitizeHTML] attribute will 
  have more options to sanitize strings. It'll probably also get renamed to 
  [Sanitize] at that point.

2 March 2012

- Commented out the ApplicationMountPoint option until I can fully address the 
  assumptions I initially made about it.
- Changed the DescriptiveNameAttribute so it can apply to any field.
- Commented out the ErrorAttribute since it wasn't being used anymore and was
  a hold over from Autumn.
- Changed the CustomError class so it knows about the view engine so you can use
  fragments.
- Added an extension method to retrieve DescriptiveName attributes from enums.
- Did a little code cleanup in the route manager.
- Used FxCop to identify issues and I've resolved them. I've added some 
  suppresion attributes to suppress warnings about indirectly exposing methods 
  that have link demands. These occurred on the internal MainConfig class 
  pertaining to a method that exposed a web.config section. This class is only 
  used internally so in theory it should not pose a risk. There were a few other 
  issues that were reported pertaining to Active Directory lookup methods. A 
  user of this class cannot exploit security because s/he would have to pass a 
  username and password of a user that has access to Active Directory in order 
  to perform AD searches in order to succeed.
- Fixed issue identified by FxCop with the Pre/Post action handler being 
  declared incorrectly. I was declaring these events in a non-standard way. I 
  have refactored that code to declare and call the event in the standard way.

1 March 2012

- Commented out the Request.ValidateInput() in the route manager. Validation 
  will be handled by the controller.
- Added some code to the AuroraModule to set the PagesSection.ValidateRequest to 
  false.
- Added new SanitizeHTML attribute. This applies to strings on action methods as
  well as strings in post models. This uses the HTMLAgilityPack to strip HTML 
  tags from strings.
- Little code moving in the route manager to eliminate redundant calls to obtain 
  the list of routes when requesting static files.
- Commented out some code that wasn't being used in the route manager. I will 
  remove this at a later date.
- Fixed the RemoveToken method in the AntiForgeryToken class
- Fixed [FromRedirectOnly] actions

29 February 2012

- More tweaking to the route manager and the view results.

28 February 2012

- Added an HTML helper for a checkbox
- Tweaks to the various view result classes
- Fixed a regression in AllRouteInfos that caused some cached routes to not have
  an updated instance of their controller class. This was causing expired 
  HttpContexts
  to spew errors about the base stream not being writable and that the headers 
  were already sent to the client when setting the content type.

27 February 2012

- A couple of very minor tweaks.

26 February 2012

- Miscellaneous tweaks.

21 February 2012

- AddRoute which is used for dynamic routing didn't work, now it does.

31 January 2012

- Made the view engine lously coupled (got a bit sloppy over the months and
  didn't realize it)
- Miscellaneous small changes

13 January 2012

- Modified AllRouteInfos to make it more awesome.
- Found a few instances where I was adding stuff to the Application store and 
  I wasn't locking it.
- Fixed a bug in FindRoute in the DefaultRouteManager class. I had an erroneous
  routes.Add call that was duplicating routes in the route list.
- Added some more error checking to FindRoute dealing with action parameter
  transforms.
- Changed calls to String.Format and similar static methods to string.Format,
  etc...
- Bumped version numer to 1.99.21

12 January 2012

- Added a RouteManager option to the Web.Config section so it can be dynamically
  declared.
- Small tweaks to the GetLoggedOnUser in the SecurityManager class.
- In the Minify class (which is based on JSMin) I made an update to incorporate
  a change that was just pushed to JSMin on the 9th of January.
- Added a RowTransform class and handling code to the HTMLTable helper. For now
  this provides the ability to apply a CSS class to a table row based on a
  condition for the current row in the model being processed when the table is
  being generated.
- A bunch of other minor changes.
- Bumped version number to 1.99.20

5 January 2012

- Static file mapping (extension, content-type) can now be specified in the
  web.config. Not documented yet.
- Made a change to the HTML Table helper and DescriptiveName attribute so that
  you can specify that you want a Model property to use it's property name as
  the table header name but have it's camel cased name spaced out.

4 January 2012

- Work in the posted form mapping pertaining to values coming in that should be
  converted to a bool (ie. for checkboxes, etc..)
- Beginnings of code for the web.config to handle user defined content type
  mappings for static file types. (NOTE: Static files are served by the
  framework and not IISi, this is done on purpose.)

3 January 2012

- Kicking the can further down the road making little adjustments here and there.

1 January 2012

- Routes that share the same alias but vary in parameters should work again.

30 December 2011

- Worked on the RouteManager tweaking how routes are handled.
- Reworked the ApplicationInternals method that creates the route list. Routes
  really are working this time for subsequent requests from the route cache.
- Worked on the BundleManager, it's now able to bundle up CSS and Javascript and
  uses the Minify class to minify them.
- ViewResults (except virtual file result) now either gzip or deflate the
  response stream.
- Made small change to the Range validation class for model validation.

29 December 2011

- Added HttpPut and HttpDelete attributes and most of the implementation code to
  route them. Still have some work to do here before it's ready for use.
- Did some work in the FindRoute method in the RouteManager, removed some cruft
  from the RouteInfo class and tweaked the ApplicationInternals method that
  creates the list of RouteInfo's. Routes are now correctly cached so subsequent
  requests won't be creating the list of routes all over again.

28 December 2011

- Tweaked the way action parameter transforms were implemented
- Added a class called Minify to minify CSS and Javascript
- CSS and Javascript files now get minified before they are sent to the
  requester
- Started working on the Bundle class which will be able to combine CSS and
  Javascript for less server requests

27 December 2011

- Yet more tweaking. Added preliminary support for action parameter transforms.

22 December 2011

- Tweaking here and there...

21 December 2011

- From last update until now lots of refactoring and changes. All features with
  exception of the custom error method per class are still there. The
  RouteManager and it's supporting classes got a ton of work!

28 November 2011

- Fixed a few spelling mistakes and doc screw ups.

25 November 2011 

- Refactoring to custom error handling. And some minor tweaks.

24 November 2011 

- Tweaked IAutumnContext Path so that it can be rewritten at runtime. This
  allows for the default request of default.aspx to be rewritten to go to the
  default action without the need to redirect when no action has been
  designated.

23 November 2011 

- Added ability to add/remove route aliases programmatically in a controller.
- Did some reworking of the custom error handling code.

22 November 2011 

- Fixed issues for the HTMLTable helper when dealing with column transforms
  which caused them to not be processed correctly.

21 November 2011 

- Documented fragments
- Did some work on the Model class with regards to model discovery for posted
  forms and setting of the Error property when model validation fails.
- Removered extraneous FIXME: comments throughout the code for work that was
  previously done but messages were still left littering code.
- Documentation of the ActiveDirectory methods
- Some minor work to the ActiveDirectory class to add some additional methods
  for global catalog searching.

20 November 2011

- Actions that return a JsonView must have a valid antiforgery token passed in
  the query string. This is to prevent cross site ajax requests. A new directive
  has been added to the view engine called %%JsonAntiForgeryToken%%
- Fix for more than one antiforgery token on page. Now each token will be
  unique.

18 November 2011 

- Tweaks to removing extraneous lines from compiled views. Added an extension
  method to remove HTML from strings.  All posted forms elements that contain
  HTML will be stripped. This feature uses the HtmlAgilityPack.
- Added support for posted form model validation but it's not fully tested yet.
  Posted form values that bind directly to actions don't have automatic
  validation yet.

17 November 2011 
 
 - Refactored the documentation and implemented the HttpsOnly named parameter on
   the HttpGet and HttpPost attributes.
 - Fixed bug that prevented action invocation when multiple controllers were in
   an application.

15 November 2011

- Still working on refining DetermineActionMethod.

14 November 2011

- A couple small tweaks. I just said that because I'm too lazy to do a diff and
  I can't remember what I changed. =/

10 November 2011

- A fix to SimpleViewManager if you pass in a null tag dictionary when calling
  RenderFragment.
- A fix for the SecurityManager when segregating an action based on user
  specified roles.

8 November 2011

- Added a few more fields to the ActiveDirectoryUser class and made a small
  change to the HTMLTable helper.

4 November 2011

- Rewrote DetermineActionMethod again. 

3 November 2011

- Changed the way static files are handled relative to the app path.

2 November 2011

- Added a FragmentResult, RenderFragment to string and necessary infrastructure
  to the SimpleViewEngine to support fragment views (think partials but not like
  the current partials that are building blocks for regular views, these are
  fragments of HTML combinded with dynamic data meant primarily for responding
  to AJAX requests, think JsonResult but without the JSON). The documentation is
  starting to lapse again in the comment header, it'll catch up to the recent
  features added eventually.

1 November 2011

- Added an attribute and infrastructure for describing and invoking an action
  that is for redirect only. This means that the action is not able to be
  navigated to unless it is from an action that redirected to it. Once the
  redirect occurs the action is no longer able to be navigated to until another
  redirect to it occurs.

31 October 2011

- Regression in the get/post action determination logic dealing with bound
  parameters.
- The initial round of XML documentation tags are almost complete. Will have to
  go back and revise and make awesome!
- Moved some authentication cookie code to the Engine because I'm using my own
  User class instead of just a generic IPrincipal.

30 October 2011

- Started writing all the XML documentation comments
- Made some minor tweaks to the Controller class

28 October 2011

- There is still some foo going on in DetermineActionMethod, I think I resolved
  it but not totally sure. The method still seems brittle. I'm going to have to
  take a good hard look at how it's doing business!

27 October 2011

- Refactoring to the HTMLTable helper
- Documentation updates
- A few other minor changes 

26 October 2011

- Fixed a regression in the URL parameter binding to actions
- Worked on the AutumnFakeContext so that I can get proper unit tests created.

25 October 2011

- Documentation updates (see top of the source file)

24 October 2011

- Refactored the Get and Post routing so that Post's act very similarly to Get's
  when parameters bound to them. Now you can post to actions and have form
  values as action arguments instead of creating a post model. This is the first
  iteration so there may be some regressions introduced.
- Miscellaneous other tweaks and small changes and sprinkling of notes
  throughout the code.

18 October 2011

- Added a class to do some basic Active Directory searching for user accounts.
  This is so you can look up accounts in AD for authentication purposes.
- Added some Web.Config options for the AD stuff
- Did some other tweaking and house keeping
- Added some more documentation

17 October 2011

- More documentation updates
- More work on the HTMLTable helper

15 October 2011

- Set Context.User to null if there is no AutumnAuth cookie in the AutumnModule
- Made a minor change to the source code documentation for the Web.Config
  example

14 October 2011

- Bug fixes in the SimpleViewEngine pertaining to partial views mangling
  rendered views
- Bug fixes made for parameters bound to actions
- Added an HTML helper for select

13 October 2011

- Added support for DotNetOpenAuth to the SecurityManager
- Lots of work on the HTML helper classes
- Added a class which will take a flat class representing a data model and
  produce an HTML table from it.

5 October 2011

- Added a method to the AntiForgeryToken class to remove the current token

30 September 2011

- Very minor tweaks made to the source file

28 September 2011

- More work on the Security Manager
- The payload of the authentication token is now encrypted
- More refinement of the named parameters in the HttpGet and HttpPost attributes
- More documentation updates in the source code comments 

25 September 2011

- Changed Controller Tags dictionary name to ViewTags

20 September 2011

- A custom error class can now be defined by subclassing CustomError and
  overriding the Error action, you can only have one and it will override any
  error action you've put in your Controller.  This custom error class will get
  called for controllers or static files that cause an error.
- Implemented an html encoded tag syntax for the simple view engine. You simply
  enclose your tag like so: {|mytag|}

19 September 2011

- Custom error action for controllers
- Partials can now inject stuff into a master pages head tag
- Secure named parameter on HttpGet and HttpPost is now implemented, tell the
  framework about your logged in user via the SecurityManager
- Web.config configuration section updates
- Documentation updates
  
18 September 2011

- Implemented the file upload processing
- Began the process of writing the security manager for secure actions
- Lots of work done to the simple view engine

16 September 2011

- Lots of work on route aliasing and the documentation in the source comments 

13 September 2011 

- Still making tweaks to the code, trying to become more stable. I added some
  events to the Controller class for before action and after action. One
  scenario for this is logging. 

Feb/March 2011

- Initial concept, went through at least 3 iterations before it was uploaded to 
  Github.
  
License: GNU GPL version 3 <http://www.gnu.org/licenses/gpl-3.0.html>

// This program is free software: you can redistribute it and/or modify it under
// the terms of the GNU General Public License as published by the Free Software
// Foundation, either version 3 of the License, or (at your option) any later
// version.
//
// This program is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
// FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
// details.
//
// You should have received a copy of the GNU General Public License along with
// this program.  If not, see <http://www.gnu.org/licenses/>.
